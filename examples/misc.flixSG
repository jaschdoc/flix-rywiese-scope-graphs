pub enum List[t] {
    pub case Nil
    pub case Cons(t, List[t])
}

pub type alias IntList = List[Int32]

pub enum Tuple2[a, b] {
    case Tuple2(a, b)
}

type alias TupleList[t] = List[Tuple2[t, t]]

pub mod List {
    use ToString.toString as baseToString
    use Network.Http

    pub def empty(): List[t] = {
        Nil
    }

    pub def toString(l: List[Q.T]): String = {
        let something = Nil;
        Http.ping(something);
        baseToString(something)
    }



}
